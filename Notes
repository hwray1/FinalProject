simulate movement of individuals through time (discrete)
	Out-most for loop
	-track what happens to populations
	-steps in weeks
	-each step(1wk)- can stay in population or move to new pop
		use landscape method for movement

	if indivdual moves
		remove from old list
		add to new list
		** OUTSIDE OF THE FOR LOOP

	calculate and print frequency of phenotype of individuals
	trajectory graph
		phenotype freq
		population sizes
		create plots


class individual:
    """ """
    def __init__(self,phenotype):
        """ """
        self.phenotype = phenotype


class population:
    """ """
    def _init_(self,popSize,phenotype):
        """ """
        self.popSize = popSize
        indList = []
        
        for i in range(popSize):
            self.indList.append(individual(phenotype))
        
    def addMember(self, joiner):
        """ """
        self.indList.append(joiner)
        
    def removeMember(self, leaver):
        """ """
        self.indList.append(leaver)


class landscape:
	""" """
	def _init_(self,numIndividuals,phenoList):
        """ """
        self.phenoList = phenoList
        self.numPopulations = len(phenoList)

        self.popList = []
        for i in phenoList:
        	self.popList.append(population(numIndividuals,1))

        self.moveMatrix = []
        self.createMatrix(self.numPopulations)

    def createMatrix(self,numPopulations):
    	""" """
    	for x in range(numPopulations):

    		col = []
    		for y in range(numPopulations):
    			col.append(random.randrange(100))

    		self.moveMatrix.append(col)


#    def move(self):
#    	""" """
#    	for x in popList
#
#    		for y in 